/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.runservice.views;

import com.runservice.controller.ServicioController;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFrame;

/**
 *
 * @author Eduardo
 */
public class ListaServiciosView extends JFrame {
    ServicioController servicioController;
    DefaultTableModel model;
    AgregarActualizarServiciosView agregarActualizarServiciosView;
    Object[] registroSeleccionado;
    
    /**
     * Creates new form ListaServiciosView
     */
    public ListaServiciosView() {
        initComponents();
        this.servicioController = new ServicioController();
        this.registroSeleccionado = new Object[this.tblListaServicios.getModel().getColumnCount()-1];
        this.listarServicios();
        
        
    }
    
    public void asignarValoresFilaSeleccionada(){
        /*
        Acordate de poner los valores a mandar al actualizar los datos actuales
        y acordate de poner los valores
        */
    }
    
    public void listarServicios(){
        this.model = (DefaultTableModel)this.tblListaServicios.getModel();
        this.model.setRowCount(0);
        this.servicioController = new ServicioController();
        
        LinkedHashMap data = this.servicioController.obtenerServicios();
        
        ArrayList idServicio = (ArrayList)data.get("id_servicio");
        ArrayList nombreServicio = (ArrayList)data.get("nombre_servicio");
        ArrayList nombreEjecutable = (ArrayList)data.get("nombre_ejecutable");
        ArrayList ejecutando = (ArrayList)data.get("ejecutando");
        
        Iterator idServicioI = (Iterator) idServicio.iterator();
        Iterator nombreServicioI = (Iterator) nombreServicio.iterator();
        Iterator nombreEjecutableI = (Iterator) nombreEjecutable.iterator();
        Iterator ejecutandoI = (Iterator) ejecutando.iterator();
        
        for(int i = 0;i < idServicio.size();i++){
            Object[] obj = {
                idServicioI.next(),
                nombreServicioI.next(),
                nombreEjecutableI.next(),
                null
            };
            this.model.addRow(obj);
        }
        
        this.tblListaServicios.setModel(model);
        this.tblListaServicios.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblListaServicios = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaResultados = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        miAgregarServicio = new javax.swing.JMenuItem();
        miActualizarServicio = new javax.swing.JMenuItem();
        miQuitarServicio = new javax.swing.JMenuItem();
        miSalir = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        miAbout = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tblListaServicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nombre", "Ejecutable", "Acciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListaServicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListaServiciosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblListaServicios);
        if (tblListaServicios.getColumnModel().getColumnCount() > 0) {
            tblListaServicios.getColumnModel().getColumn(0).setMinWidth(0);
            tblListaServicios.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblListaServicios.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        txaResultados.setEditable(false);
        txaResultados.setColumns(20);
        txaResultados.setRows(5);
        txaResultados.setText("Resultados...");
        jScrollPane1.setViewportView(txaResultados);

        menuArchivo.setMnemonic('f');
        menuArchivo.setText("Archivo");

        miAgregarServicio.setMnemonic('o');
        miAgregarServicio.setText("Agregar Servicio");
        miAgregarServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAgregarServicioActionPerformed(evt);
            }
        });
        menuArchivo.add(miAgregarServicio);

        miActualizarServicio.setMnemonic('s');
        miActualizarServicio.setText("Actualizar Servicio");
        miActualizarServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miActualizarServicioActionPerformed(evt);
            }
        });
        menuArchivo.add(miActualizarServicio);

        miQuitarServicio.setMnemonic('a');
        miQuitarServicio.setText("Quitar Servcio");
        miQuitarServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miQuitarServicioActionPerformed(evt);
            }
        });
        menuArchivo.add(miQuitarServicio);

        miSalir.setMnemonic('x');
        miSalir.setText("Salir");
        miSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(miSalir);

        menuBar.add(menuArchivo);

        menuAyuda.setMnemonic('h');
        menuAyuda.setText("Ayuda");

        miAbout.setMnemonic('c');
        miAbout.setText("Manual");
        menuAyuda.add(miAbout);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("Acerca de...");
        menuAyuda.add(aboutMenuItem);

        menuBar.add(menuAyuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_miSalirActionPerformed

    private void miAgregarServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAgregarServicioActionPerformed
        // TODO add your handling code here:
        System.out.println(this.agregarActualizarServiciosView);
        this.agregarActualizarServiciosView = new AgregarActualizarServiciosView(this, true, true, this.servicioController, null);
        this.agregarActualizarServiciosView.setLocationRelativeTo(this);
        this.agregarActualizarServiciosView.setVisible(true);
    }//GEN-LAST:event_miAgregarServicioActionPerformed

    private void miActualizarServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miActualizarServicioActionPerformed
        // TODO add your handling code here:
        this.agregarActualizarServiciosView = new AgregarActualizarServiciosView(this, true, false, this.servicioController, this.registroSeleccionado);
        this.agregarActualizarServiciosView.setLocationRelativeTo(this);
        this.agregarActualizarServiciosView.setVisible(true);
    }//GEN-LAST:event_miActualizarServicioActionPerformed

    private void tblListaServiciosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaServiciosMouseClicked
        // TODO add your handling code here:
        ///por si ocurre el error otra vez xd
        System.out.println("-------------------------------------------------");
        System.out.println("antes de capturar");
        int rowIndex = this.tblListaServicios.getSelectedRow();
        System.out.println(this.registroSeleccionado[0] + " " + this.registroSeleccionado[1] + " " + this.registroSeleccionado[2]);
        
        this.registroSeleccionado[0] = this.tblListaServicios.getModel().getValueAt(rowIndex, 0);
        this.registroSeleccionado[1] = this.tblListaServicios.getModel().getValueAt(rowIndex, 1);
        this.registroSeleccionado[2] = this.tblListaServicios.getModel().getValueAt(rowIndex, 2);        
        
        System.out.println("despues de capturar");        
        System.out.println(this.registroSeleccionado[0] + " " + this.registroSeleccionado[1] + " " + this.registroSeleccionado[2]);
        System.out.println("registro seleccionado capturado");
        System.out.println("-------------------------------------------------");
    }//GEN-LAST:event_tblListaServiciosMouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        this.listarServicios();
    }//GEN-LAST:event_formWindowActivated

    private void miQuitarServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miQuitarServicioActionPerformed
        // TODO add your handling code here:        
        this.servicioController.eliminarServicio((int)this.registroSeleccionado[0]);
        this.listarServicios();
    }//GEN-LAST:event_miQuitarServicioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem miAbout;
    private javax.swing.JMenuItem miActualizarServicio;
    private javax.swing.JMenuItem miAgregarServicio;
    private javax.swing.JMenuItem miQuitarServicio;
    private javax.swing.JMenuItem miSalir;
    private javax.swing.JTable tblListaServicios;
    private javax.swing.JTextArea txaResultados;
    // End of variables declaration//GEN-END:variables
}
